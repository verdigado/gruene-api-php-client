<?php
/**
 * ProfilesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Verdigado\GrueneApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gruene API
 *
 * ## OpenAPI Endpoints <a href=\"/api-json\">OpenAPI Spec in JSON</a><br> <a href=\"/api-yaml\">OpenAPI Spec in YAML</a><br>  ### Offboarding Every service conntected to GrÃ¼nes Netz needs to remove users when they are removed from `saml.gruene.de`. Connected services need to pull a list of users waiting for removal at least once a week. api.gruene.de needs to be informed whether the user did not exist or was removed. API tokens can be obtained from `technik@verdigado.com`.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Verdigado\GrueneApiClient\Test\Api;

use \Verdigado\GrueneApiClient\Configuration;
use \Verdigado\GrueneApiClient\ApiException;
use \Verdigado\GrueneApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProfilesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Verdigado\GrueneApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProfilesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createProfile
     *
     * Create user profile.
     *
     */
    public function testCreateProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProfile
     *
     * Delete user profile.
     *
     */
    public function testDeleteProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProfileImage
     *
     * Delete user profile image.
     *
     */
    public function testDeleteProfileImage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findProfileTags
     *
     * List profile tags.
     *
     */
    public function testFindProfileTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findProfiles
     *
     * Find user profiles.
     *
     */
    public function testFindProfiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOwnProfile
     *
     * Get the authenticated user's profile.
     *
     */
    public function testGetOwnProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProfile
     *
     * Get a user profile.
     *
     */
    public function testGetProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProfile
     *
     * Update user profile.
     *
     */
    public function testUpdateProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProfileImage
     *
     * Update profile image.
     *
     */
    public function testUpdateProfileImage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
