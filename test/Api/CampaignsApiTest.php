<?php
/**
 * CampaignsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Verdigado\GrueneApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gruene API
 *
 * ## OpenAPI Endpoints <a href=\"/api-json\">OpenAPI Spec in JSON</a><br> <a href=\"/api-yaml\">OpenAPI Spec in YAML</a><br>  ### Offboarding Every service conntected to GrÃ¼nes Netz needs to remove users when they are removed from `saml.gruene.de`. Connected services need to pull a list of users waiting for removal at least once a week. api.gruene.de needs to be informed whether the user did not exist or was removed. API tokens can be obtained from `technik@verdigado.com`.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Verdigado\GrueneApiClient\Test\Api;

use \Verdigado\GrueneApiClient\Configuration;
use \Verdigado\GrueneApiClient\ApiException;
use \Verdigado\GrueneApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CampaignsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Verdigado\GrueneApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CampaignsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addPoiPhoto
     *
     * Add POI photo.
     *
     */
    public function testAddPoiPhoto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createArea
     *
     * Create a new Area.
     *
     */
    public function testCreateArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createExperienceArea
     *
     * Create a new ExperienceArea.
     *
     */
    public function testCreateExperienceArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFocusArea
     *
     * Create a new FocusArea.
     *
     */
    public function testCreateFocusArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPoi
     *
     * Create a new POI.
     *
     */
    public function testCreatePoi()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteArea
     *
     * Delete an Area.
     *
     */
    public function testDeleteArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteExperienceArea
     *
     * Delete a ExperienceArea.
     *
     */
    public function testDeleteExperienceArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFocusArea
     *
     * Delete a FocusArea.
     *
     */
    public function testDeleteFocusArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePoi
     *
     * Delete a POI.
     *
     */
    public function testDeletePoi()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePoiPhoto
     *
     * Delete a POI Photo.
     *
     */
    public function testDeletePoiPhoto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findAreas
     *
     * Find Areas.
     *
     */
    public function testFindAreas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findExperienceAreas
     *
     * Find ExperienceAreas.
     *
     */
    public function testFindExperienceAreas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findFocusAreas
     *
     * Find FocusAreas.
     *
     */
    public function testFindFocusAreas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findOwnAreas
     *
     * Find own Areas.
     *
     */
    public function testFindOwnAreas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findOwnPois
     *
     * Find own POIs.
     *
     */
    public function testFindOwnPois()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findPois
     *
     * Find POIs.
     *
     */
    public function testFindPois()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getArea
     *
     * Get an Area.
     *
     */
    public function testGetArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExperienceArea
     *
     * Get a ExperienceArea.
     *
     */
    public function testGetExperienceArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFocusArea
     *
     * Get a FocusArea.
     *
     */
    public function testGetFocusArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPoi
     *
     * Get a POI.
     *
     */
    public function testGetPoi()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateArea
     *
     * Update an Area.
     *
     */
    public function testUpdateArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateExperienceArea
     *
     * Update a ExperienceArea.
     *
     */
    public function testUpdateExperienceArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateFocusArea
     *
     * Update a FocusArea.
     *
     */
    public function testUpdateFocusArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePoi
     *
     * Update a POI.
     *
     */
    public function testUpdatePoi()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
